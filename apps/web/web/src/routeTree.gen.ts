/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkspaceWSlugImport } from './routes/workspace/$wSlug'
import { Route as WorkspaceWSlugSlugImport } from './routes/workspace/$wSlug.$slug'

// Create Virtual Routes

const WorkspaceWSlugIndexLazyImport = createFileRoute('/workspace/$wSlug/')()

// Create/Update Routes

const WorkspaceWSlugRoute = WorkspaceWSlugImport.update({
  path: '/workspace/$wSlug',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/workspace/$wSlug.lazy').then((d) => d.Route),
)

const WorkspaceWSlugIndexLazyRoute = WorkspaceWSlugIndexLazyImport.update({
  path: '/',
  getParentRoute: () => WorkspaceWSlugRoute,
} as any).lazy(() =>
  import('./routes/workspace/$wSlug.index.lazy').then((d) => d.Route),
)

const WorkspaceWSlugSlugRoute = WorkspaceWSlugSlugImport.update({
  path: '/$slug',
  getParentRoute: () => WorkspaceWSlugRoute,
} as any).lazy(() =>
  import('./routes/workspace/$wSlug.$slug.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/workspace/$wSlug': {
      id: '/workspace/$wSlug'
      path: '/workspace/$wSlug'
      fullPath: '/workspace/$wSlug'
      preLoaderRoute: typeof WorkspaceWSlugImport
      parentRoute: typeof rootRoute
    }
    '/workspace/$wSlug/$slug': {
      id: '/workspace/$wSlug/$slug'
      path: '/$slug'
      fullPath: '/workspace/$wSlug/$slug'
      preLoaderRoute: typeof WorkspaceWSlugSlugImport
      parentRoute: typeof WorkspaceWSlugImport
    }
    '/workspace/$wSlug/': {
      id: '/workspace/$wSlug/'
      path: '/'
      fullPath: '/workspace/$wSlug/'
      preLoaderRoute: typeof WorkspaceWSlugIndexLazyImport
      parentRoute: typeof WorkspaceWSlugImport
    }
  }
}

// Create and export the route tree

interface WorkspaceWSlugRouteChildren {
  WorkspaceWSlugSlugRoute: typeof WorkspaceWSlugSlugRoute
  WorkspaceWSlugIndexLazyRoute: typeof WorkspaceWSlugIndexLazyRoute
}

const WorkspaceWSlugRouteChildren: WorkspaceWSlugRouteChildren = {
  WorkspaceWSlugSlugRoute: WorkspaceWSlugSlugRoute,
  WorkspaceWSlugIndexLazyRoute: WorkspaceWSlugIndexLazyRoute,
}

const WorkspaceWSlugRouteWithChildren = WorkspaceWSlugRoute._addFileChildren(
  WorkspaceWSlugRouteChildren,
)

export interface FileRoutesByFullPath {
  '/workspace/$wSlug': typeof WorkspaceWSlugRouteWithChildren
  '/workspace/$wSlug/$slug': typeof WorkspaceWSlugSlugRoute
  '/workspace/$wSlug/': typeof WorkspaceWSlugIndexLazyRoute
}

export interface FileRoutesByTo {
  '/workspace/$wSlug/$slug': typeof WorkspaceWSlugSlugRoute
  '/workspace/$wSlug': typeof WorkspaceWSlugIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/workspace/$wSlug': typeof WorkspaceWSlugRouteWithChildren
  '/workspace/$wSlug/$slug': typeof WorkspaceWSlugSlugRoute
  '/workspace/$wSlug/': typeof WorkspaceWSlugIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/workspace/$wSlug'
    | '/workspace/$wSlug/$slug'
    | '/workspace/$wSlug/'
  fileRoutesByTo: FileRoutesByTo
  to: '/workspace/$wSlug/$slug' | '/workspace/$wSlug'
  id:
    | '__root__'
    | '/workspace/$wSlug'
    | '/workspace/$wSlug/$slug'
    | '/workspace/$wSlug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  WorkspaceWSlugRoute: typeof WorkspaceWSlugRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  WorkspaceWSlugRoute: WorkspaceWSlugRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/workspace/$wSlug"
      ]
    },
    "/workspace/$wSlug": {
      "filePath": "workspace/$wSlug.tsx",
      "children": [
        "/workspace/$wSlug/$slug",
        "/workspace/$wSlug/"
      ]
    },
    "/workspace/$wSlug/$slug": {
      "filePath": "workspace/$wSlug.$slug.tsx",
      "parent": "/workspace/$wSlug"
    },
    "/workspace/$wSlug/": {
      "filePath": "workspace/$wSlug.index.lazy.tsx",
      "parent": "/workspace/$wSlug"
    }
  }
}
ROUTE_MANIFEST_END */
