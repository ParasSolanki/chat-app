/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkspaceRouteImport } from './routes/workspace/route'
import { Route as WorkspaceWSlugImport } from './routes/workspace/$wSlug'

// Create Virtual Routes

const WorkspaceWSlugIndexLazyImport = createFileRoute('/workspace/$wSlug/')()
const WorkspaceWSlugSlugLazyImport = createFileRoute(
  '/workspace/$wSlug/$slug',
)()

// Create/Update Routes

const WorkspaceRouteRoute = WorkspaceRouteImport.update({
  path: '/workspace',
  getParentRoute: () => rootRoute,
} as any)

const WorkspaceWSlugRoute = WorkspaceWSlugImport.update({
  path: '/$wSlug',
  getParentRoute: () => WorkspaceRouteRoute,
} as any).lazy(() =>
  import('./routes/workspace/$wSlug.lazy').then((d) => d.Route),
)

const WorkspaceWSlugIndexLazyRoute = WorkspaceWSlugIndexLazyImport.update({
  path: '/',
  getParentRoute: () => WorkspaceWSlugRoute,
} as any).lazy(() =>
  import('./routes/workspace/$wSlug.index.lazy').then((d) => d.Route),
)

const WorkspaceWSlugSlugLazyRoute = WorkspaceWSlugSlugLazyImport.update({
  path: '/$slug',
  getParentRoute: () => WorkspaceWSlugRoute,
} as any).lazy(() =>
  import('./routes/workspace/$wSlug.$slug.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/workspace': {
      id: '/workspace'
      path: '/workspace'
      fullPath: '/workspace'
      preLoaderRoute: typeof WorkspaceRouteImport
      parentRoute: typeof rootRoute
    }
    '/workspace/$wSlug': {
      id: '/workspace/$wSlug'
      path: '/$wSlug'
      fullPath: '/workspace/$wSlug'
      preLoaderRoute: typeof WorkspaceWSlugImport
      parentRoute: typeof WorkspaceRouteImport
    }
    '/workspace/$wSlug/$slug': {
      id: '/workspace/$wSlug/$slug'
      path: '/$slug'
      fullPath: '/workspace/$wSlug/$slug'
      preLoaderRoute: typeof WorkspaceWSlugSlugLazyImport
      parentRoute: typeof WorkspaceWSlugImport
    }
    '/workspace/$wSlug/': {
      id: '/workspace/$wSlug/'
      path: '/'
      fullPath: '/workspace/$wSlug/'
      preLoaderRoute: typeof WorkspaceWSlugIndexLazyImport
      parentRoute: typeof WorkspaceWSlugImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  WorkspaceRouteRoute: WorkspaceRouteRoute.addChildren({
    WorkspaceWSlugRoute: WorkspaceWSlugRoute.addChildren({
      WorkspaceWSlugSlugLazyRoute,
      WorkspaceWSlugIndexLazyRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/workspace"
      ]
    },
    "/workspace": {
      "filePath": "workspace/route.tsx",
      "children": [
        "/workspace/$wSlug"
      ]
    },
    "/workspace/$wSlug": {
      "filePath": "workspace/$wSlug.tsx",
      "parent": "/workspace",
      "children": [
        "/workspace/$wSlug/$slug",
        "/workspace/$wSlug/"
      ]
    },
    "/workspace/$wSlug/$slug": {
      "filePath": "workspace/$wSlug.$slug.lazy.tsx",
      "parent": "/workspace/$wSlug"
    },
    "/workspace/$wSlug/": {
      "filePath": "workspace/$wSlug.index.lazy.tsx",
      "parent": "/workspace/$wSlug"
    }
  }
}
ROUTE_MANIFEST_END */
